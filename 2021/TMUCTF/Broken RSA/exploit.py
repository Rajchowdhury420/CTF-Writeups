from Crypto.Util.number import *

e = 65537
msgs= [
b'\x04TMUCTF\x03',
b'\x02TMUCTF\x01',
b'\x00TMUCTF\x00',
b'\x01TMUCTF\x02',
b'\x03TMUCTF\x04',
b'\x04\x04TMUCTF\x03\x03',
b'\x02\x02TMUCTF\x01\x01',
b'\x00\x00TMUCTF\x00\x00',
b'\x01\x01TMUCTF\x02\x02',
b'\x03\x03TMUCTF\x04\x04',
b'\x04\x04\x04TMUCTF\x03\x03\x03',
b'\x02\x02\x02TMUCTF\x01\x01\x01',
b'\x00\x00\x00TMUCTF\x00\x00\x00',
b'\x01\x01\x01TMUCTF\x02\x02\x02',
b'\x03\x03\x03TMUCTF\x04\x04\x04',
b'\x04\x04\x04\x04TMUCTF\x03\x03\x03\x03',
b'\x02\x02\x02\x02TMUCTF\x01\x01\x01\x01',
b'\x00\x00\x00\x00TMUCTF\x00\x00\x00\x00',
b'\x01\x01\x01\x01TMUCTF\x02\x02\x02\x02',
b'\x03\x03\x03\x03TMUCTF\x04\x04\x04\x04',
b'\x04\x04\x04\x04\x04TMUCTF\x03\x03\x03\x03\x03',
b'\x02\x02\x02\x02\x02TMUCTF\x01\x01\x01\x01\x01',
b'\x00\x00\x00\x00\x00TMUCTF\x00\x00\x00\x00\x00',
b'\x01\x01\x01\x01\x01TMUCTF\x02\x02\x02\x02\x02',
b'\x03\x03\x03\x03\x03TMUCTF\x04\x04\x04\x04\x04']

c = list(map(int, open('out.txt').read().splitlines()))
# assert len(msgs)+1 == len(c)
# print(c)
# print(c[2])
# print(c[7])
# print(c[12])

pp = pow(2, e*8)
n = GCD(pp * c[2] - c[7], pp * c[7] - c[12])
# print(n)
# n = 178687641710030174725391391875667596365020728306319047485522635263856928788792264392747544630866502200298051103123255099970617381333101830066744705357923051686594736448334538740566230676008114657220351133399973716405404704654132288956810705849964560317000445171090246556869619036945752872429931964062189095563138744809626920021187533539499744999940892826446388022339663656502481337983590571794320931540723276842297611798866462197198435976264905955663723006770230633947206618763194442570290448812114549218867835561537767658934219897738952522114759281325723662384407818238388836452701782722266368637081847540663426878964206423537416368928558513511910356279139696064536450514293833309698627046383863195702404780871841847505106126552260648896877439999464328457911073105705457119731432752925110957852530172829266128412160058897537830972644942192992462097998221061279622581673295977766215387020119500286919736797464640883769066399346357647673531235429835830770457120931424234362943301312350110319595495619381
# print(n.bit_length())
assert (pow(bytes_to_long(msgs[i]), e, n) == c[i] for i in range(len(msgs)))
p = 17168409475383972628504778240855911978985929543286350892069246008372473042523567037011013249871547777584631416739758322856251015798698301831765580955300650407835153601378654173742292554894502681735405620391535895647045866153891745460976487617315465562496499358894287054034024692381191210822762212034588017308516989613261306910988892855362427544142343518767108593353834256519607664876369541892324877459094093260657539475432861721224124049660249386714464357030183841589410520002623236416489710292432265593266725745973870777993186048812530526551997744644388584507538634448903227467825441758880828727826547230875410498763
q = 2**1279-1

d = inverse(e, (p-1)*(q-1))

print(long_to_bytes(pow(c[-1],d,n)))

# TMUCTF{Ju57_4n07h3r_R54_ch4ll3n63!_C0u1d_y0u_50lv3_17?!?}
# poly = sum(e * x^i for i,e in enumerate(p.digits(base=2)))
# x^2047 + x^2043 + x^10 + x^7 + x^6 + x^3 + x + 1
