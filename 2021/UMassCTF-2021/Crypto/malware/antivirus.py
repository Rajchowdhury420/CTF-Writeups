#!/usr/bin/env python3

def xor(block1, block2):
	return bytes([a^b for a,b in zip(block1, block2)])

def split_blocks(data, BLOCKSIZE):
	return [data[i:i+BLOCKSIZE] for i in range(0, len(data), BLOCKSIZE)]

BLOCKSIZE = 16
malware_blocks = split_blocks(open('malware.py','rb').read(), BLOCKSIZE)
enc_malware_blocks = split_blocks(open('files/malware.py.enc','rb').read(), BLOCKSIZE)
enc_flag_blocks = split_blocks(open('files/flag.txt.enc','rb').read(), BLOCKSIZE)

flagsize = len(enc_flag_blocks)
files = 4
vals = [i+1 for i in range(files)]

for n in vals:
	final = b''
	for i in range(flagsize):
		keystream = xor(malware_blocks[i+n], enc_malware_blocks[i+n])
		dec_flag = xor(enc_flag_blocks[i], keystream)
		final += dec_flag
	print(f"[n = {n}] = {final}")

# UMASS{m4lw4re_st1ll_n33ds_g00d_c4ypt0}